[tool.poetry]
name = "GMFi"
version = "0.1.0"
description = "Game Master Finance."
authors = ["ihawking"]
readme = "README.md"
package-mode = false

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
DJANGO_SETTINGS_MODULE = "GMFi.settings"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["GMFi/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py312']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = [
    "GMFi",
    "config",
]
skip = [".venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
    "pylint_celery",
]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.poetry.dependencies]
python = "^3.12"
django = "5.0.6"
web3 = "6.20.0"
django-unfold = "0.29.1"
celery = "5.4.0"
django-extensions = "3.2.3"
cryptography = "41.0.7"
ipaddress = "1.0.23"
djangorestframework = "3.14.0"
django-redis = "5.4.0"
django-celery-results = "2.5.1"
loguru = "^0.7.2"
requests = "2.31.0"
arrow = "1.3.0"
ulid-py = "1.1.0"


[tool.poetry.group.local.dependencies]
watchfiles = "^0.21.0"

werkzeug = { extras = ["watchdog"], version = "^3.0.1" }
ipdb = "^0.13.13"
psycopg = { extras = ["binary"], version = "^3.1.14" }

# Testing
mypy = "^1.7.1"
pytest = "^7.4.3"
pytest-sugar = "^0.9.7"
djangorestframework-stubs = { version = "3.14.5", extras = ["compatible-mypy"] }


#Documents
sphinx = "^7.2.6"
sphinx-autobuild = "^2021.3.14"

# Code quality
flake8 = "^6.1.0"
flake8-isort = "^6.1.1"
coverage = "^7.3.2"
djlint = "^1.34.0"
pylint-django = "^2.5.5"
pylint-celery = "^0.3"
pre-commit = "^3.5.0"

# Django
factory-boy = "^3.3.0"
django-debug-toolbar = "^4.2.0"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.7.0"

[tool.poetry.group.production]
optional = true

[tool.poetry.group.production.dependencies]
gunicorn = "21.2.0"
psycopg = "3.1.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
